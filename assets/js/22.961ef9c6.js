(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{486:function(t,a,s){"use strict";s.r(a);var n=s(9),e=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("Java 18 在 2022 年 3 月 22 日正式发布，非长期支持版本。")]),t._v(" "),a("p",[t._v("Java 18 带来了 9 个新特性：")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://openjdk.java.net/jeps/400",target:"_blank",rel:"noopener noreferrer"}},[t._v("JEP 400:UTF-8 by Default（默认字符集为 UTF-8）"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://openjdk.java.net/jeps/408",target:"_blank",rel:"noopener noreferrer"}},[t._v("JEP 408:Simple Web Server（简易的 Web 服务器）"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://openjdk.java.net/jeps/413",target:"_blank",rel:"noopener noreferrer"}},[t._v("JEP 413:Code Snippets in Java API Documentation（Java API 文档中的代码片段）"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://openjdk.java.net/jeps/416",target:"_blank",rel:"noopener noreferrer"}},[t._v("JEP 416:Reimplement Core Reflection with Method Handles（使用方法句柄重新实现反射核心）"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://openjdk.java.net/jeps/417",target:"_blank",rel:"noopener noreferrer"}},[t._v("JEP 417:Vector（向量） API"),a("OutboundLink")],1),t._v("（第三次孵化）")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://openjdk.java.net/jeps/418",target:"_blank",rel:"noopener noreferrer"}},[t._v("JEP 418:Internet-Address Resolution（互联网地址解析）SPI"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://openjdk.java.net/jeps/419",target:"_blank",rel:"noopener noreferrer"}},[t._v("JEP 419:Foreign Function & Memory API（外部函数和内存 API）"),a("OutboundLink")],1),t._v("（第二次孵化）")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://openjdk.java.net/jeps/420",target:"_blank",rel:"noopener noreferrer"}},[t._v("JEP 420:Pattern Matching for switch（switch 模式匹配）"),a("OutboundLink")],1),t._v("（第二次预览）")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://openjdk.java.net/jeps/421",target:"_blank",rel:"noopener noreferrer"}},[t._v("JEP 421:Deprecate Finalization for Removal"),a("OutboundLink")],1)])]),t._v(" "),a("p",[t._v("Java 17 中包含 14 个特性，Java 16 中包含 17 个特性，Java 15 中包含 14 个特性，Java 14 中包含 16 个特性。相比于前面发布的版本来说，Java 18 的新特性少了很多。")]),t._v(" "),a("p",[t._v("这里只对 400、408、413、416、417、418、419 这几个我觉得比较重要的新特性进行详细介绍。")]),t._v(" "),a("p",[t._v("相关阅读：")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://openjdk.java.net/projects/jdk/18/",target:"_blank",rel:"noopener noreferrer"}},[t._v("OpenJDK Java 18 文档"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://mp.weixin.qq.com/s/PocFKR9z9u7-YCZHsrA5kQ",target:"_blank",rel:"noopener noreferrer"}},[t._v("IntelliJ IDEA | Java 18 功能支持"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"jep-400-默认字符集为-utf-8"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jep-400-默认字符集为-utf-8"}},[t._v("#")]),t._v(" JEP 400:默认字符集为 UTF-8")]),t._v(" "),a("p",[t._v("JDK 终于将 UTF-8 设置为默认字符集。")]),t._v(" "),a("p",[t._v("在 Java 17 及更早版本中，默认字符集是在 Java 虚拟机运行时才确定的，取决于不同的操作系统、区域设置等因素，因此存在潜在的风险。就比如说你在 Mac 上运行正常的一段打印文字到控制台的 Java 程序到了 Windows 上就会出现乱码，如果你不手动更改字符集的话。")]),t._v(" "),a("h2",{attrs:{id:"jep-408-简易的-web-服务器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jep-408-简易的-web-服务器"}},[t._v("#")]),t._v(" JEP 408:简易的 Web 服务器")]),t._v(" "),a("p",[t._v("Java 18 之后，你可以使用 "),a("code",[t._v("jwebserver")]),t._v(" 命令启动一个简易的静态 Web 服务器。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ jwebserver\nBinding to loopback by default. For all interfaces use "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-b 0.0.0.0"')]),t._v(" or "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-b ::"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\nServing /cwd and subdirectories on "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1 port "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8000")]),t._v("\nURL: http://127.0.0.1:8000/\n")])])]),a("p",[t._v("这个服务器不支持 CGI 和 Servlet，只限于静态文件。")]),t._v(" "),a("h2",{attrs:{id:"jep-413-优化-java-api-文档中的代码片段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jep-413-优化-java-api-文档中的代码片段"}},[t._v("#")]),t._v(" JEP 413:优化 Java API 文档中的代码片段")]),t._v(" "),a("p",[t._v("在 Java 18 之前，如果我们想要在 Javadoc 中引入代码片段可以使用 "),a("code",[t._v("<pre>{@code ...}</pre>")]),t._v(" 。")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("pre"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@code")]),t._v("\n    lines of source code\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("pre"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("p",[a("code",[t._v("<pre>{@code ...}</pre>")]),t._v(" 这种方式生成的效果比较一般。")]),t._v(" "),a("p",[t._v("在 Java 18 之后，可以通过 "),a("code",[t._v("@snippet")]),t._v(" 标签来做这件事情。")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/**\n * The following code shows how to use {@code Optional.isPresent}:\n * {@snippet :\n * if (v.isPresent()) {\n *     System.out.println("v: " + v.get());\n * }\n * }\n */')]),t._v("\n")])])]),a("p",[a("code",[t._v("@snippet")]),t._v(" 这种方式生成的效果更好且使用起来更方便一些。")]),t._v(" "),a("h2",{attrs:{id:"jep-416-使用方法句柄重新实现反射核心"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jep-416-使用方法句柄重新实现反射核心"}},[t._v("#")]),t._v(" JEP 416:使用方法句柄重新实现反射核心")]),t._v(" "),a("p",[t._v("Java 18 改进了 "),a("code",[t._v("java.lang.reflect.Method")]),t._v("、"),a("code",[t._v("Constructor")]),t._v(" 的实现逻辑，使之性能更好，速度更快。这项改动不会改动相关 API ，这意味着开发中不需要改动反射相关代码，就可以体验到性能更好反射。")]),t._v(" "),a("p",[t._v("OpenJDK 官方给出了新老实现的反射性能基准测试结果。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://oss.javaguide.cn/github/javaguide/java/new-features/JEP416Benchmark.png",alt:"新老实现的反射性能基准测试结果"}})]),t._v(" "),a("h2",{attrs:{id:"jep-417-向量-api-第三次孵化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jep-417-向量-api-第三次孵化"}},[t._v("#")]),t._v(" JEP 417: 向量 API（第三次孵化）")]),t._v(" "),a("p",[t._v("向量（Vector） API 最初由 "),a("a",{attrs:{href:"https://openjdk.java.net/jeps/338",target:"_blank",rel:"noopener noreferrer"}},[t._v("JEP 338"),a("OutboundLink")],1),t._v(" 提出，并作为"),a("a",{attrs:{href:"http://openjdk.java.net/jeps/11",target:"_blank",rel:"noopener noreferrer"}},[t._v("孵化 API"),a("OutboundLink")],1),t._v("集成到 Java 16 中。第二轮孵化由 "),a("a",{attrs:{href:"https://openjdk.java.net/jeps/414",target:"_blank",rel:"noopener noreferrer"}},[t._v("JEP 414"),a("OutboundLink")],1),t._v(" 提出并集成到 Java 17 中，第三轮孵化由 "),a("a",{attrs:{href:"https://openjdk.java.net/jeps/417",target:"_blank",rel:"noopener noreferrer"}},[t._v("JEP 417"),a("OutboundLink")],1),t._v(" 提出并集成到 Java 18 中，第四轮由 "),a("a",{attrs:{href:"https://openjdk.java.net/jeps/426",target:"_blank",rel:"noopener noreferrer"}},[t._v("JEP 426"),a("OutboundLink")],1),t._v(" 提出并集成到了 Java 19 中。")]),t._v(" "),a("p",[t._v("向量计算由对向量的一系列操作组成。向量 API 用来表达向量计算，该计算可以在运行时可靠地编译为支持的 CPU 架构上的最佳向量指令，从而实现优于等效标量计算的性能。")]),t._v(" "),a("p",[t._v("向量 API 的目标是为用户提供简洁易用且与平台无关的表达范围广泛的向量计算。")]),t._v(" "),a("p",[t._v("这是对数组元素的简单标量计算：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("scalarComputation")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0f")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("这是使用 Vector API 进行的等效向量计算：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("VectorSpecies")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Float")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SPECIES")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FloatVector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SPECIES_PREFERRED")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vectorComputation")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" upperBound "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SPECIES")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("loopBound")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" upperBound"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SPECIES")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("length")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// FloatVector va, vb, vc;")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" va "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FloatVector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fromArray")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SPECIES")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" vb "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FloatVector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fromArray")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SPECIES")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" vc "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" va"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mul")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("va"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vb"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mul")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vb"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("neg")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        vc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("intoArray")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0f")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("p",[t._v("在 JDK 18 中，向量 API 的性能得到了进一步的优化。")]),t._v(" "),a("h2",{attrs:{id:"jep-418-互联网地址解析-spi"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jep-418-互联网地址解析-spi"}},[t._v("#")]),t._v(" JEP 418:互联网地址解析 SPI")]),t._v(" "),a("p",[t._v("Java 18 定义了一个全新的 SPI（service-provider interface），用于主要名称和地址的解析，以便 "),a("code",[t._v("java.net.InetAddress")]),t._v(" 可以使用平台之外的第三方解析器。")]),t._v(" "),a("h2",{attrs:{id:"jep-419-foreign-function-memory-api-第二次孵化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jep-419-foreign-function-memory-api-第二次孵化"}},[t._v("#")]),t._v(" JEP 419:Foreign Function & Memory API（第二次孵化）")]),t._v(" "),a("p",[t._v("Java 程序可以通过该 API 与 Java 运行时之外的代码和数据进行互操作。通过高效地调用外部函数（即 JVM 之外的代码）和安全地访问外部内存（即不受 JVM 管理的内存），该 API 使 Java 程序能够调用本机库并处理本机数据，而不会像 JNI 那样危险和脆弱。")]),t._v(" "),a("p",[t._v("外部函数和内存 API 在 Java 17 中进行了第一轮孵化，由 "),a("a",{attrs:{href:"https://openjdk.java.net/jeps/412",target:"_blank",rel:"noopener noreferrer"}},[t._v("JEP 412"),a("OutboundLink")],1),t._v(" 提出。第二轮孵化由"),a("a",{attrs:{href:"https://openjdk.org/jeps/419",target:"_blank",rel:"noopener noreferrer"}},[t._v("JEP 419"),a("OutboundLink")],1),t._v(" 提出并集成到了 Java 18 中，预览由 "),a("a",{attrs:{href:"https://openjdk.org/jeps/424",target:"_blank",rel:"noopener noreferrer"}},[t._v("JEP 424"),a("OutboundLink")],1),t._v(" 提出并集成到了 Java 19 中。")]),t._v(" "),a("p",[t._v("在 "),a("RouterLink",{attrs:{to:"/01.Java基础/05.版本新特性/java19.html"}},[t._v("Java 19 新特性概览")]),t._v(" 中，我有详细介绍到外部函数和内存 API，这里就不再做额外的介绍了。")],1)])}),[],!1,null,null,null);a.default=e.exports}}]);